@{
    ViewData["Title"] = "Rubric";
}

    <div class="Rubric">
        <p>Have at least one page where logged on users can comment on posts: <strong>We have many. Comments are only on pages with out images. If there was an image on the page it would not reload the page and we couldnt figure out how to get it to work.</strong> </p>
        <p>Administrators can create pages: <strong>Code for this in Index.cshtml under the file BlogPost. Also can be seen on Trip Index page when logged in as admin. Login info in file MyIdentityData.cs</strong></p>
        <p>Editors & Adiminstrators can update content on pages: <strong>Code for this in Index.cshtml under the file BlogPost. Also can be seen on Trip Index page when logged in as admin or editor. Login info in file MyIdentityData.cs</strong></p>
        <p>Dynamic pages will have at least three different content areas (e.g. title, heading, body): <strong>On our pages if the user does not fill out part of the form it will not show that on their page and it will slid everything up.</strong></p>
        <p>Dynamic pages will have at least three different content areas (e.g. title, heading, body): <strong>On our pages if the user does not fill out part of the form it will not show that on their page and it will slid everything up. The code for it can be found in my Details view.</strong></p>
        <p>Do not use the default style / theme. Impress me: <strong>Be impressed!</strong> </p>
        <p>Use a sqlite database included in your repository: <strong>Lines 42-43 on Startup.cs and file cmsProject.db</strong> </p>
        <p>Special Feature #1: <strong>Did a web service call to external 3rd party web service. We did this with the location finder, weather report, and map. Code on file BlogPostController lines 58-74. Example found on any of our tirps that have a location</strong></p>
        <p>Special Feature #2: <strong>We Included images in the page content and stored in the database. Code for this can be found in my BlogPost model on line 22, in my BlogPostController on lines 129-136 and in my Creat.cshtml on lines 31-34</strong> </p>
        <p>Special Feature #3: <strong>(Custom 404 page and Restricted Authorization Page) - Add anything to the end url of our website to see a custom 404 page. Copy and paste this link 'https://localhost:5001/BlogPost/Create' while not logged in to see that you are unable to access restricted content.</strong> </p>
        <p>Appropriate permissions for instructor access to code without making the instructor ask for them: <strong>Use logins found in MyIdentityData.cs</strong> </p>
        <p>Clean architecture and code</p>
        <p>Include a table showing where each requirement is fulfilled: <strong>Found on Rubric page</strong></p>
    </div>